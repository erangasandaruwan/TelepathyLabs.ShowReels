{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { VideoClip } from '../../models/video-clip';\nimport { TimeCode } from '../../models/time-code';\nimport { ShowReel } from '../../models/show-reel';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/video-definition/video-definition.service\";\nimport * as i2 from \"../../services/video-standard/video-standard.service\";\nimport * as i3 from \"../../services/show-reel/show-reel.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\n\nfunction ShowReelEditorComponent_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const videoDefinition_r3 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", videoDefinition_r3.Key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", videoDefinition_r3.Value, \"\");\n  }\n}\n\nfunction ShowReelEditorComponent_option_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const videoStandard_r4 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", videoStandard_r4.Key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", videoStandard_r4.Value, \"\");\n  }\n}\n\nfunction ShowReelEditorComponent_tr_56_button_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 40);\n    i0.ɵɵlistener(\"click\", function ShowReelEditorComponent_tr_56_button_34_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const i_r6 = i0.ɵɵnextContext().index;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.removeClip(i_r6));\n    });\n    i0.ɵɵtext(1, \"X\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ShowReelEditorComponent_tr_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 26)(1, \"td\");\n    i0.ɵɵelement(2, \"input\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelement(4, \"input\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 29)(7, \"span\", 30);\n    i0.ɵɵtext(8, \"HH:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 31);\n    i0.ɵɵelementStart(10, \"span\", 30);\n    i0.ɵɵtext(11, \"MM:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 32);\n    i0.ɵɵelementStart(13, \"span\", 30);\n    i0.ɵɵtext(14, \"ss:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 33);\n    i0.ɵɵelementStart(16, \"span\", 30);\n    i0.ɵɵtext(17, \"ff:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"input\", 34);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"td\")(20, \"div\", 29)(21, \"span\", 30);\n    i0.ɵɵtext(22, \"HH:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(23, \"input\", 35);\n    i0.ɵɵelementStart(24, \"span\", 30);\n    i0.ɵɵtext(25, \"MM:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(26, \"input\", 36);\n    i0.ɵɵelementStart(27, \"span\", 30);\n    i0.ɵɵtext(28, \"ss:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(29, \"input\", 37);\n    i0.ɵɵelementStart(30, \"span\", 30);\n    i0.ɵɵtext(31, \"ff:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(32, \"input\", 38);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(33, \"td\");\n    i0.ɵɵtemplate(34, ShowReelEditorComponent_tr_56_button_34_Template, 2, 0, \"button\", 39);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const i_r6 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"videoClipName-\", i_r6, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"videoClipDescription-\", i_r6, \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"clipStartTimeCodeHours-\", i_r6, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"clipStartTimeCodeMinutes-\", i_r6, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"clipStartTimeCodeSeconds-\", i_r6, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"clipStartTimeCodeFrames-\", i_r6, \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"clipEndTimeCodeHours-\", i_r6, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"clipEndTimeCodeMinutes-\", i_r6, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"clipEndTimeCodeSeconds-\", i_r6, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"clipEndTimeCodeFrames-\", i_r6, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.videoClips.length > 1);\n  }\n}\n\nexport let ShowReelEditorComponent = /*#__PURE__*/(() => {\n  class ShowReelEditorComponent {\n    constructor(videoDefinitionService, videoStandardService, showReelervice, formBuilder, router) {\n      this.videoDefinitionService = videoDefinitionService;\n      this.videoStandardService = videoStandardService;\n      this.showReelervice = showReelervice;\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.frameRates = new Map();\n      this.showReelForm = this.formBuilder.group({\n        name: ['', [Validators.required]],\n        description: ['', [Validators.required]],\n        videoDefinition: ['', [Validators.required, Validators.min(1), Validators.max(2)]],\n        videoStandard: ['', [Validators.required, Validators.min(1), Validators.max(2)]],\n        videoClips: this.formBuilder.array([this.formBuilder.group({\n          clipName: [''],\n          clipDescription: [''],\n          clipStartTimeCodeHours: ['00', [Validators.required, Validators.min(0), Validators.max(59)]],\n          clipStartTimeCodeMinutes: ['00', [Validators.required, Validators.min(0), Validators.max(59)]],\n          clipStartTimeCodeSeconds: ['00', [Validators.required, Validators.min(0), Validators.max(59)]],\n          clipStartTimeCodeFrames: ['00', [Validators.required, Validators.min(0), Validators.max(59)]],\n          clipEndTimeCodeHours: ['00', [Validators.required, Validators.min(0), Validators.max(59)]],\n          clipEndTimeCodeMinutes: ['00', [Validators.required, Validators.min(0), Validators.max(59)]],\n          clipEndTimeCodeSeconds: ['00', [Validators.required, Validators.min(0), Validators.max(59)]],\n          clipEndTimeCodeFrames: ['00', [Validators.required, Validators.min(0), Validators.max(59)]]\n        })])\n      });\n      this.frameRates.set(1, 25);\n      this.frameRates.set(2, 30);\n      this.totalTime = new TimeCode(0, 0, 0, 0, 2);\n    }\n\n    ngOnInit() {\n      this.videoDefinitionService.getVideoDefinition().subscribe(response => {\n        this.videoDefinitions = response;\n      });\n      this.videoStandardService.getVideoStandard().subscribe(response => {\n        this.videoStandards = response;\n      });\n      var self = this;\n      this.videoClips.disable();\n      this.showReelForm.get('videoStandard')?.valueChanges.subscribe(v => {\n        if (parseInt(v ?? '') > 0) {\n          this.totalTime = new TimeCode(0, 0, 0, 0, this.frameRates.get(parseInt(v ?? '')) ?? 0);\n          self.videoClips.enable();\n        }\n      });\n      this.videoClips.valueChanges.subscribe(v => {\n        var timeInfo = v;\n        var lastTimeInfo = timeInfo[timeInfo.length - 1];\n\n        if (this.videoClips.enabled) {\n          var timeCode = new TimeCode(parseInt(lastTimeInfo.clipEndTimeCodeHours ?? ''), parseInt(lastTimeInfo.clipEndTimeCodeMinutes ?? ''), parseInt(lastTimeInfo.clipEndTimeCodeSeconds ?? ''), parseInt(lastTimeInfo.clipEndTimeCodeFrames ?? ''), this.totalTime.FramesPerSecond);\n          this.totalTime = timeCode;\n        }\n      });\n    }\n\n    get videoClips() {\n      return this.showReelForm.get('videoClips');\n    }\n\n    AddClip() {\n      var startTimeCode = this.totalTime.Add(new TimeCode(0, 0, 0, 1, this.totalTime.FramesPerSecond));\n      console.log(startTimeCode);\n      var endTimeCode = this.totalTime.Add(new TimeCode(0, 0, 0, 2, this.totalTime.FramesPerSecond));\n      console.log(endTimeCode);\n      this.videoClips.push(this.formBuilder.group({\n        clipName: [''],\n        clipDescription: [''],\n        clipVideoDefinition: [''],\n        clipVideoStandard: [''],\n        clipStartTimeCodeHours: [startTimeCode.Hours],\n        clipStartTimeCodeMinutes: [startTimeCode.Minutes],\n        clipStartTimeCodeSeconds: [startTimeCode.Seconds],\n        clipStartTimeCodeFrames: [startTimeCode.Frames],\n        clipEndTimeCodeHours: [endTimeCode.Hours],\n        clipEndTimeCodeMinutes: [endTimeCode.Minutes],\n        clipEndTimeCodeSeconds: [endTimeCode.Seconds],\n        clipEndTimeCodeFrames: [endTimeCode.Frames]\n      }));\n      this.totalTime = endTimeCode;\n    }\n\n    removeClip(i) {\n      if (this.videoClips.length > 1) {\n        this.videoClips.removeAt(i);\n      }\n    }\n\n    onSubmit() {\n      try {\n        let clips = this.showReelForm.value.videoClips?.map(v => {\n          var startTimeCode = new TimeCode(parseInt(v.clipStartTimeCodeHours ?? ''), parseInt(v.clipStartTimeCodeMinutes ?? ''), parseInt(v.clipStartTimeCodeSeconds ?? ''), parseInt(v.clipStartTimeCodeFrames ?? ''), this.frameRates.get(parseInt(this.showReelForm.value.videoStandard ?? '')) ?? 0);\n          var endTimeCode = new TimeCode(parseInt(v.clipEndTimeCodeHours ?? ''), parseInt(v.clipEndTimeCodeMinutes ?? ''), parseInt(v.clipEndTimeCodeSeconds ?? ''), parseInt(v.clipEndTimeCodeFrames ?? ''), this.frameRates.get(parseInt(this.showReelForm.value.videoStandard ?? '')) ?? 0);\n          return new VideoClip(v.clipName ?? '', v.clipDescription ?? '', parseInt(this.showReelForm.value.videoDefinition ?? ''), parseInt(this.showReelForm.value.videoStandard ?? ''), startTimeCode, endTimeCode);\n        });\n        var showReel = new ShowReel(this.showReelForm.value.name ?? '', this.showReelForm.value.description ?? '', parseInt(this.showReelForm.value.videoDefinition ?? ''), parseInt(this.showReelForm.value.videoStandard ?? ''), clips ?? []);\n        console.log(showReel);\n        this.showReelervice.saveShowReel(showReel).subscribe(response => {\n          console.log(response);\n          this.router.navigate(['list-show-reels']);\n        });\n      } catch (error) {\n        alert(error);\n      }\n    }\n\n    get isVideoStandardSelected() {\n      if (this.showReelForm.value.videoStandard) {\n        return parseInt(this.showReelForm.value.videoStandard) > 0;\n      }\n\n      return false;\n    }\n\n  }\n\n  ShowReelEditorComponent.ɵfac = function ShowReelEditorComponent_Factory(t) {\n    return new (t || ShowReelEditorComponent)(i0.ɵɵdirectiveInject(i1.VideoDefinitionService), i0.ɵɵdirectiveInject(i2.VideoStandardService), i0.ɵɵdirectiveInject(i3.ShowReelService), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.Router));\n  };\n\n  ShowReelEditorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ShowReelEditorComponent,\n    selectors: [[\"show-reel-editor\"]],\n    decls: 63,\n    vars: 6,\n    consts: [[\"id\", \"#outer-show-reel\", 1, \"outer-show-reel\"], [1, \"light\", \"row\", \"gx-5\"], [1, \"col\", \"p-3\"], [\"type\", \"button\", \"routerLink\", \"/list-show-list\", \"routerLinkActive\", \"active\", \"ariaCurrentWhenActive\", \"page\", 1, \"btn\", \"btn-primary\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mt-3\"], [\"for\", \"name\", 1, \"col-2\", \"col-form-label\"], [1, \"col-6\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"description\", 1, \"col-2\", \"col-form-label\"], [\"type\", \"text\", \"formControlName\", \"description\", 1, \"form-control\"], [\"for\", \"videoDefinition\", 1, \"col-2\", \"col-form-label\"], [\"aria-label\", \"Video Definition\", \"formControlName\", \"videoDefinition\", 1, \"form-select\"], [\"selected\", \"\", \"value\", \"0\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"videoStandard\", 1, \"col-2\", \"col-form-label\"], [\"aria-label\", \"Video Standard\", \"formControlName\", \"videoStandard\", 1, \"form-select\"], [1, \"col-2\", \"col-form-label\"], [1, \"col-3\"], [\"formArrayName\", \"videoClips\", 1, \"row\", \"p-3\", \"border\", \"bg-light\"], [1, \"table\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-5\", 3, \"disabled\"], [3, \"value\"], [3, \"formGroupName\"], [\"formControlName\", \"clipName\", \"type\", \"text\", 1, \"form-control\", 3, \"id\"], [\"formControlName\", \"clipDescription\", \"type\", \"text\", 1, \"form-control\", 3, \"id\"], [1, \"input-group\"], [1, \"input-group-text\"], [\"formControlName\", \"clipStartTimeCodeHours\", \"type\", \"number\", \"placeholder\", \"HH\", \"aria-label\", \"Hours\", 1, \"form-control\", 3, \"id\"], [\"formControlName\", \"clipStartTimeCodeMinutes\", \"type\", \"number\", \"placeholder\", \"MM\", \"aria-label\", \"Minutes\", 1, \"form-control\", 3, \"id\"], [\"formControlName\", \"clipStartTimeCodeSeconds\", \"type\", \"number\", \"placeholder\", \"ss\", \"aria-label\", \"Seconds\", 1, \"form-control\", 3, \"id\"], [\"formControlName\", \"clipStartTimeCodeFrames\", \"type\", \"number\", \"placeholder\", \"ff\", \"aria-label\", \"Frames\", 1, \"form-control\", 3, \"id\"], [\"formControlName\", \"clipEndTimeCodeHours\", \"type\", \"number\", \"placeholder\", \"HH\", \"aria-label\", \"Hours\", 1, \"form-control\", 3, \"id\"], [\"formControlName\", \"clipEndTimeCodeMinutes\", \"type\", \"number\", \"placeholder\", \"MM\", \"aria-label\", \"Minutes\", 1, \"form-control\", 3, \"id\"], [\"formControlName\", \"clipEndTimeCodeSeconds\", \"type\", \"number\", \"placeholder\", \"ss\", \"aria-label\", \"Seconds\", 1, \"form-control\", 3, \"id\"], [\"formControlName\", \"clipEndTimeCodeFrames\", \"type\", \"number\", \"placeholder\", \"ff\", \"aria-label\", \"Frames\", 1, \"form-control\", 3, \"id\"], [\"type\", \"button\", \"class\", \"btn btn-warn\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-warn\", 3, \"click\"]],\n    template: function ShowReelEditorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"a\", 3);\n        i0.ɵɵtext(4, \" Go Back to Show Reel List \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(5, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function ShowReelEditorComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n        i0.ɵɵtext(8, \"Show Reel Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelement(10, \"input\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 9);\n        i0.ɵɵtext(13, \"Show Reel Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 7);\n        i0.ɵɵelement(15, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 5)(17, \"label\", 11);\n        i0.ɵɵtext(18, \"Video Definition\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 7)(20, \"select\", 12)(21, \"option\", 13);\n        i0.ɵɵtext(22, \"Select\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, ShowReelEditorComponent_option_23_Template, 2, 2, \"option\", 14);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"div\", 5)(25, \"label\", 15);\n        i0.ɵɵtext(26, \"Video Standard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 7)(28, \"select\", 16)(29, \"option\", 13);\n        i0.ɵɵtext(30, \"Select\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(31, ShowReelEditorComponent_option_31_Template, 2, 2, \"option\", 14);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(32, \"div\", 5)(33, \"label\", 17);\n        i0.ɵɵtext(34, \"Total Duration (HH:MM:ss:ff)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 7);\n        i0.ɵɵtext(36);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(37, \"br\")(38, \"br\");\n        i0.ɵɵelementStart(39, \"div\", 5)(40, \"div\", 18)(41, \"h5\");\n        i0.ɵɵtext(42, \"Clips\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(43, \"div\", 19)(44, \"table\", 20)(45, \"thead\")(46, \"tr\")(47, \"th\");\n        i0.ɵɵtext(48, \"Clip Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"th\");\n        i0.ɵɵtext(50, \"Clip Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"th\");\n        i0.ɵɵtext(52, \"Start Time Code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"th\");\n        i0.ɵɵtext(54, \"End Time Code\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(55, \"tbody\");\n        i0.ɵɵtemplate(56, ShowReelEditorComponent_tr_56_Template, 35, 12, \"tr\", 21);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(57, \"div\", 5)(58, \"div\", 22)(59, \"button\", 23);\n        i0.ɵɵlistener(\"click\", function ShowReelEditorComponent_Template_button_click_59_listener() {\n          return ctx.AddClip();\n        });\n        i0.ɵɵtext(60, \"Add Clip\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(61, \"button\", 24);\n        i0.ɵɵtext(62, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.showReelForm);\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"ngForOf\", ctx.videoDefinitions);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.videoStandards);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", ctx.totalTime.ToString, \" \");\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"ngForOf\", ctx.videoClips.controls);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", !ctx.showReelForm.valid);\n      }\n    },\n    dependencies: [i6.NgForOf, i6.NgIf, i5.RouterLinkWithHref, i5.RouterLinkActive, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i4.FormGroupName, i4.FormArrayName],\n    styles: [\"\\n    #outer-show-reel {\\n        border-radius: 3px;\\n        border: 1px gray;\\n        margin: 0 10 0 10;\\n    }\\n\"],\n    encapsulation: 2\n  });\n  return ShowReelEditorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}